name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: "deps-node-modules-${{hashFiles('**/package-lock.json')}}"
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: "deps-node-modules-${{hashFiles('**/package-lock.json')}}"
      - name: Install dependencies
        run: npm ci
      - name: Test code
        id: TestCode
        run: npm run test
      - name: Upload test report
        if: failure() && steps.TestCode.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{steps.Publish.outputs.test}}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: "deps-node-modules-${{ hashFiles('**/package-lock.json') }}"
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish JS filename
        id: Publish 
        run: find dist/assets/*.js -type f -execdir echo 'test={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: |
            dist
            package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps: 
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: echo "${{needs.build.outputs.script-file}}"
      - name: Output content
        run: ls 
      - name: Deploy
        run: echo "Deploying..."
  report:
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output info
        run: |
          echo "Something went wrong" 
          echo "${{github}}"
